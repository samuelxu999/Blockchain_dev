================ Blockchain development environment setup on MacOS =======================

------------------------------------------------------------------------------------------
                                 Prerequisite
------------------------------------------------------------------------------------------
#docker installation, refer to https://docs.docker.com/install/
A) Install Docker Engine And Docker Compose
	brew install docker docker-compose
			

B) Install Go language:	
	First of all, download go package, like go1.22.0.darwin-amd64.pkg
		wget https://storage.googleapis.com/golang/go1.22.0.darwin-arm64.tar.gz

	Remove old version of go:
		rm -rf /usr/local/go
	
	Finally extract file to /usr/local/go
		sudo tar -C /usr/local -xzf go1.22.0.darwin-arm64.tar.gz

	Unlink Currently Installed Go Version
		brew unlink go

	
C)  Add GOROOT and GOPATH env variables and append them to PATH
	GOROOT: go_lang library and tools 
	GOPATH: go application work directory, e.g., $HOME/MyDocuments/05_Developer/dev_pkg
	1) open ~/.zshrc file
		pico ~/.zshrc

	2) Append following to end of file
		export GOROOT=/usr/local/go
		export PATH=$PATH:$GOROOT/bin	
		export GOPATH=$HOME/MyDocuments/05_Developer/dev_pkg
		export PATH=$PATH:$GOPATH/bin

	3) activate env
		source ~/.zshrc	
	

D) Reboot & Verify version
	go version
	docker version
	docker-compose version
	

---------------------------------------------------------------------------------------------
								Ethereum Blockchain
---------------------------------------------------------------------------------------------
The following instruction introduce How to install an Ethereum blockchain node on MacOS
Method: build from source code
	A) Get Source Code
		mkdir -p $GOPATH/src/github.com/ethereum
		cd $GOPATH/src/github.com/ethereum
		git clone https://github.com/ethereum/go-ethereum.git

	B) Ether go-ethereum
		cd go-ethereum
	
	C) You may use specify version, like v1.10.19, so check out version based on tag
		git checkout v1.10.19

	D) build all inclduing geth and bootnode. This will take several minutes to be done.
		make all

	E) Add go-ethereum executable bin path in ~/.zshrc
		1) open ~/.zshrc file
			pico ~/.zshrc

		2) Append following to end of file
			export GOETHEREUM=$GOPATH/src/github.com/ethereum/go-ethereum/build
			export PATH=$PATH:$GOETHEREUM/bin

		3) activate env
			source ~/.zshrc

	F) Check version 
		geth version

---------------------------------------------------------------------------------------------
								Smart Contract Development
---------------------------------------------------------------------------------------------
1) Prerequisite: make sure your Pi has node installed, if not, try install npm and node.js first.
	Install node.js and npm:
	brew update	
	brew install node

	
	Test installation:
		node -v
		npm -v

		
2) We use truffle as development IDE, http://truffleframework.com/docs/
	Install truffle on RPI:
		npm install -g truffle
	
	Test installation:
		truffle version

	Install solidity by version
		npm install -g solc@0.8.10
	 
	Test version:
		solcjs --version

		
3) Prepare the project folder.
	1) New project folder:SmartToken
		mkdir -p ~/SC_dev/SmartToken
		
	2) Then, use Truffle to initiate your project: 
		cd ~/SC_dev/SmartToken
		truffle init
	
	3) Develop smart contract
		refer to http://chainskills.com/2017/04/03/create-and-deploy-a-smart-contract-66/
		
	4) In general, test scripts are saved in ./test folder, you could execute test script like:
		node ./test/wc3_test_token.js



			